name: Publish Kubeflow Notebook Jupyter Pytorch Cuda Devel Image

on:
  workflow_dispatch: # Allows to trigger the workflow manually in GitHub UI

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/kubeflow-notebooks/jupyter-pytorch-cuda-devel
  BASE_IMAGE: ${{ github.repository_owner }}/kubeflow-notebooks/jupyter-pytorch-cuda:1d4424a
  CACHE_IMAGE: ${{ github.repository_owner }}/kubeflow-notebooks/build-cache
  CACHE_TAG: jupyter-pytorch-cuda-devel

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      # `docker/metadata-action` does this for us, but the `cache-from` and `cache-to` inputs directly read env and are cursed.
      # See this long discussion: <https://github.com/orgs/community/discussions/25768>
      - id: lower-repo
        run: |
          echo "BASE_IMAGE=${BASE_IMAGE@L}" >> ${GITHUB_ENV}
          echo "CACHE_IMAGE=${CACHE_IMAGE@L}" >> ${GITHUB_ENV}
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # semver has default priority 900, sha has default priority 100
          # ref has default priority 600
          # see <https://github.com/docker/metadata-action#priority-attribute>
          # also, sha has a default prefix of '-sha'
          # see <https://github.com/docker/metadata-action#typesha>
          tags: |
            type=semver,pattern={{version}}
            type=sha,priority=850,prefix=
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6.13.0
        with:
          file: kubeflow/notebook-servers/jupyter-pytorch-cuda-devel/Dockerfile
          context: kubeflow/notebook-servers/jupyter-pytorch-cuda-devel
          # The index (https://download.pytorch.org/whl/cu121) is hard-coded in the Dockerfile,
          # which only supports up to these versions.
          build-args: |
            BASE_IMG=${{ env.REGISTRY }}/${{ env.BASE_IMAGE }}
            CUDA_VERSION=12.1.1
            GCC_VERSION=12.2
          cache-from: |
            type=registry,ref=${{ env.REGISTRY }}/${{ env.CACHE_IMAGE }}:${{ env.CACHE_TAG }}
          # See <https://docs.docker.com/build/cache/backends/#cache-mode>
          cache-to: |
            type=registry,ref=${{ env.REGISTRY }}/${{ env.CACHE_IMAGE }}:${{ env.CACHE_TAG }},mode=max
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
